alter session set "_ORACLE_SCRIPT"=true;
/
CREATE USER de_prj identified by de_prj;
/
GRANT CONNECT, RESOURCE, DBA TO  de_prj;
/
create table tmp_stock_index (
symbol_code	varchar(20)                             ,
name	varchar(50)                                 ,
description	varchar(250)                            ,
indicator_type	varchar(20)                         ,
base_currency_code	varchar(20)                     ,
trxn_vol	number(35, 5)                           ,
close_price	number(30, 10)                          ,
open_price	number(30, 10)                          ,
high_price	number(30, 10)                          ,
low_price	number(30, 10)                          ,
biz_dt_code	number(8)                               ,
biz_date	date default trunc(current_date)        ,
biz_date_time	TIMESTAMP                           ,
created_date	date  default current_date   ,
updated_date	date   default current_date  ,
regular_market_time	number
);
/
create table stock_index (
id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY	,
symbol_code	varchar(20)                             ,
name	varchar(50)                                 ,
description	varchar(250)                            ,
indicator_type	varchar(20)                         ,
base_currency_code	varchar(20)                     ,
trxn_vol	number(35, 5)                           ,
close_price	number(30, 10)                          ,
open_price	number(30, 10)                          ,
high_price	number(30, 10)                          ,
low_price	number(30, 10)                          ,
biz_dt_code	number(8)                               ,
biz_date	date default trunc(current_date)        ,
biz_date_time	TIMESTAMP                           ,
created_date	date  default (current_date)   ,
updated_date	date   default (current_date)  ,
regular_market_time	number
);
/
create table tmp_crypto_currency (
symbol_code	varchar(20)	,
name	varchar(50)	,
description	varchar(250)	,
indicator_type	varchar(20)	,
base_currency_code	varchar(20)	,
trxn_vol	number(35, 5)	,
close_price	number(30, 10)	,
open_price	number(30, 10)	,
high_price	number(30, 10)	,
low_price	number(30, 10)	,
biz_dt_code	number(8)	,
biz_date	date default trunc(current_date)	,
biz_date_time	TIMESTAMP	,
created_date	date  default  current_date	,
updated_date	date  default  current_date	,
regular_market_time	number	,
crypto_revert_price	number(30, 10)	
);
/
create table crypto_currency (
id	NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY	,
symbol_code	varchar(20)	,
name	varchar(50)	,
description	varchar(250)	,
indicator_type	varchar(20)	,
base_currency_code	varchar(20)	,
trxn_vol	number(35, 5)	,
close_price	number(30, 10)	,
open_price	number(30, 10)	,
high_price	number(30, 10)	,
low_price	number(30, 10)	,
biz_dt_code	number(8)	,
biz_date	date default trunc(current_date)	,
biz_date_time	TIMESTAMP	,
created_date	date  default  current_date	,
updated_date	date  default  current_date	,
regular_market_time	number	,
crypto_revert_price	number(30, 10)	
);
/
create table invest_portfolio
(
portfolio_code	varchar2(256)	,
portfolio_name	varchar2(256)	,
portfolio_desc	varchar2(256)	,
portfolio_type	varchar2(256)	,
portfolio_trxn_type	varchar2(256)	,
portfolio_trxn_amt	number	,
portfolio_trxn_price	number	,
portfolio_trxn_date	date	,
portfolio_trxn_date_code	number(8)	
);
/
create MATERIALIZED view Current_portfolio_value
build immediate
refresh complete on demand
as
(
select PORTFOLIO_CODE, PORTFOLIO_NAME, PORTFOLIO_TYPE, CUR_PORTFOLIO_TRXN_PRICE
from (SELECT SYMBOL_CODE AS PORTFOLIO_CODE, NAME AS PORTFOLIO_NAME, indicator_type as PORTFOLIO_TYPE,(LOW_PRICE+HIGH_PRICE) / 2 AS CUR_PORTFOLIO_TRXN_PRICE,
 row_number() over (partition by SYMBOL_CODE order by biz_dt_code desc) r_
FROM crypto_currency
)
where r_ = 1
union 
select PORTFOLIO_CODE, PORTFOLIO_NAME, PORTFOLIO_TYPE, CUR_PORTFOLIO_TRXN_PRICE
from (SELECT SYMBOL_CODE AS PORTFOLIO_CODE, NAME AS PORTFOLIO_NAME, indicator_type as PORTFOLIO_TYPE,(LOW_PRICE+HIGH_PRICE) / 2 AS CUR_PORTFOLIO_TRXN_PRICE,
 row_number() over (partition by SYMBOL_CODE order by biz_dt_code desc) r_
FROM stock_index
)
where r_ = 1
union
select PORTFOLIO_CODE, PORTFOLIO_NAME, PORTFOLIO_TYPE, CUR_PORTFOLIO_TRXN_PRICE
from (SELECT SYMBOL_CODE AS PORTFOLIO_CODE, NAME AS PORTFOLIO_NAME, indicator_type as PORTFOLIO_TYPE,exchange_rate / 2 AS CUR_PORTFOLIO_TRXN_PRICE,
 row_number() over (partition by SYMBOL_CODE order by biz_dt_code desc) r_
FROM exchange_rate
)
where r_ = 1
);
/
create MATERIALIZED view Current_portfolio_status
build immediate
refresh complete on demand
as
(
select IP.*, c.cur_portfolio_trxn_price,
case when c.cur_portfolio_trxn_price > IP.avg_buy_price then 'LOSS'
    when c.cur_portfolio_trxn_price < IP.avg_buy_price then 'PROFIT'
    else 'BAL' end as status
from
    (select portfolio_code, PORTFOLIO_TYPE, round(sum(total_amt) / sum(PORTFOLIO_Trxn_amt),4) as avg_buy_price
    from (
    SELECT portfolio_code, PORTFOLIO_TYPE, PORTFOLIO_Trxn_price, PORTFOLIO_Trxn_amt,PORTFOLIO_Trxn_price*PORTFOLIO_Trxn_amt as total_amt
    FROM invest_portfolio
    WHERE PORTFOLIO_TRXN_TYPE = 'BUY' )
    GROUP BY portfolio_code, PORTFOLIO_TYPE
    ) IP
INNER JOIN Current_portfolio_value C
ON ip.portfolio_code = c.portfolio_code AND IP.PORTFOLIO_TYPE =C.PORTFOLIO_TYPE
);
